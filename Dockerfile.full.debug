# vi: ft=Dockerfile


FROM golang:1.15 as builder
WORKDIR /app

#RUN apt-get update && apt-get install -y bzip2 jq hunspell libhunspell-dev git
#
#COPY ./tools/download_contextionary.sh ./
#RUN ./download_contextionary.sh "en" "0.16.0"
#
#COPY go.mod go.sum ./
#RUN go mod download
#
#RUN go get github.com/go-delve/delve/cmd/dlv
#
#COPY . .
#
#RUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -gcflags="all=-N -l" -o ./contextionary-server -a -tags netgo -ldflags "-w -extldflags '-static' -X main.Version=0.16.0-v0.4.17" ./server
#
#RUN tools/dev/gen_simple_contextionary.sh
#RUN mkdir -p ./data
#
#COPY ./tools/preprocess_splitter_dict.sh ./
#RUN /bin/bash preprocess_splitter_dict.sh "en" "/app/data/contextionary.idx"
#
#FROM debian:buster
#
#EXPOSE 8000 40000
#
#COPY --from=builder /go/bin/dlv /
#COPY --from=builder /app/data/contextionary.idx /app/data/contextionary.knn /app/data/stopwords.json /app/data/splitter_dict.csv /
#COPY --from=builder /app/contextionary-server /
#
#ENV KNN_FILE=/contextionary.knn
#ENV IDX_FILE=/contextionary.idx
#ENV STOPWORDS_FILE=/stopwords.json
#ENV COMPOUND_SPLITTING_DICTIONARY_FILE=/splitter_dict.csv
#
#CMD ["/dlv", "--listen=:40000", "--headless=true", "--api-version=2", "--accept-multiclient", "exec", "/contextionary-server"]